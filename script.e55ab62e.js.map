{"version":3,"sources":["../list.json","../index.js","script.js"],"names":["module","exports","regex","list","require","update","RegExp","join","included","rule","indexOf","userAgent","test","find","match","extend","additionalFilters","push","apply","filter","exclude","excludedFilters","i","length","index","lastIndexOf","toLowerCase","splice","error","textarea","timer","document","querySelector","output","query","window","location","search","replace","change","value","target","clearTimeout","setTimeout","check","innerHTML","trim","result","isbot","className","decodeURIComponent","navigator","addEventListener","select"],"mappings":"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","file":"script.e55ab62e.js","sourceRoot":"../page","sourcesContent":["module.exports=[\" daum[/|\\\\s]\",\" deusu/\",\"(?:^|\\\\s)site\",\"@[a-z]\",\"\\\\(at\\\\)[a-z]\",\"\\\\[at\\\\][a-z]\",\"^12345\",\"^<\",\"^ace explorer\",\"^acoon\",\"^active\",\"^ad muncher\",\"^ahc/\",\"^anglesharp/\",\"^anonymous\",\"^apache\",\"^applicationhealthservice\",\"^arachni/\",\"^astute srm\",\"^avsdevicesdk/\",\"^axios/\",\"^bidtellect/\",\"^biglotron\",\"^blackboard safeassign\",\"^blocknote.net\",\"^blogtrottr/\",\"^browsershots\",\"^cakephp\",\"^camo asset proxy\",\"^captivenetworksupport\",\"^castro\",\"^clamav[\\\\s/]\",\"^cobweb/\",\"^coccoc\",\"^collectd/\",\"^custom$\",\"^dap \",\"^datadog agent/\",\"^davclnt\",\"^deluge\",\"^discourse\",\"^dispatch/\\\\d\",\"^disqus/\",\"^duckduckgo\",\"^evernote clip resolver\",\"^facebook\",\"^faraday\",\"^fdm[/\\\\s]\\\\d\",\"^flashget\",\"^friendica\",\"^getright/\",\"^gigablastopensource\",\"^googal\",\"^goose\",\"^gozilla/\",\"^greenbrowser\",\"^hatena\",\"^hexometer\",\"^hobbit\",\"^hotzonu\",\"^hwcdn/\",\"^infox-wisg\",\"^ingrid/\\\\d\",\"^integrity/\",\"^jeode/\",\"^jetbrains\",\"^jetty/\",\"^jigsaw\",\"^libwww\",\"^linkdex\",\"^lwp-\",\"^lwp::simple\",\"^mailchimp\\\\.com$\",\"^metauri\",\"^microsoft bits\",\"^microsoft data\",\"^microsoft office existence\",\"^microsoft office protocol discovery\",\"^microsoft windows network diagnostics\",\"^microsoft-cryptoapi\",\"^microsoft-webdav-miniredir\",\"^monit\",\"^movabletype\",\"^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$\",\"^my browser$\",\"^navermailapp\",\"^netsurf\",\"^ning\",\"^node-superagent\",\"^notetextview\",\"^nuzzel\",\"^octopus\",\"^offline explorer\",\"^ossproxy\",\"^pagething\",\"^panscient\",\"^perimeterx\",\"^photon/\",\"^php\",\"^postman\",\"^postrank\",\"^prometheus/\",\"^python\",\"^ramblermail\",\"^restsharp/\",\"^robozilla/\",\"^ruby$\",\"^scrapy\",\"^seo\",\"^shareaza\",\"^shortlinktranslate\",\"^sistrix\",\"^sixy.ch/\",\"^smallproxy\",\"^snap$\",\"^snapchat\",\"^space bison\",\"^spotify/\",\"^sprinklr\",\"^svn\",\"^swcd \",\"^t-online browser\",\"^taringa\",\"^test certificate info\",\"^the knowledge ai\",\"^thinklab\",\"^thumb\",\"^traackr.com\",\"^transmission\",\"^tumblr/\",\"^ucmore\",\"^upflow/\",\"^user_agent\",\"^vbulletin\",\"^venus/fedoraplanet\",\"^w3c\",\"^webcopier\",\"^wget\",\"^whatsapp\",\"^whatweb\",\"^www-mechanize\",\"^xenu link sleuth\",\"^xymon\",\"^yahoo\",\"^yandex\",\"^zabbix\",\"^zdm/\\\\d\",\"^zmeu$\",\"adbeat\\\\.com\",\"amiga\",\"appinsights\",\"archive\",\"ask jeeves/teoma\",\"bit.ly/\",\"bluecoat drtr\",\"bot\",\"browsex\",\"burpcollaborator\",\"capture\",\"catch\",\"check\",\"chrome-lighthouse\",\"chromeframe\",\"client\",\"cloud\",\"crawl\",\"cron\",\"daemon\",\"dareboost\",\"datanyze\",\"dataprovider\",\"dejaclick\",\"dmbrowser\",\"download\",\"email\",\"evc-batch/\",\"feed\",\"fetch\",\"finder\",\"firephp\",\"freesafeip\",\"ghost\",\"gomezagent\",\"google\",\"headlesschrome/\",\"http\",\"httrack\",\"hubspot marketing grader\",\"hydra\",\"ibisbrowser\",\"images\",\"index\",\"ips-agent\",\"java\",\"jorgee\",\"library\",\"mail\\\\.ru/\",\"manager\",\"monitor\",\"neustar wpm\",\"news\",\"nutch\",\"offbyone\",\"optimize\",\"pagespeed\",\"parse\",\"perl\",\"phantom\",\"pingdom\",\"powermarks\",\"preview\",\"probe\",\"ptst[/ ]\\\\d\",\"reader\",\"rigor\",\"rss\",\"scan\",\"scrape\",\"search\",\"server\",\"sogou\",\"sparkler/\",\"spider\",\"statuscake\",\"stumbleupon\\\\.com\",\"supercleaner\",\"synapse\",\"synthetic\",\"toolbar\",\"torrent\",\"tracemyfile\",\"transcoder\",\"trendsmapresolver\",\"twingly recon\",\"url\",\"valid\",\"wapchoi/\",\"wappalyzer\",\"webglance\",\"webkit2png\",\"whatcms/\",\"wordpress\",\"zgrab\"];","var list = require('./list.json')\nvar regex\n\n/**\n * Refresh the local regex variable (clusure)\n */\nfunction update () {\n  regex = new RegExp(list.join('|'), 'i')\n}\n\n/**\n * Check if string matches known crawler patterns\n * @param  {string} userAgent\n * @return {boolean}\n */\nmodule.exports = function (userAgent) {\n  return regex.test(userAgent)\n}\n\n/**\n * Get the match for strings' known crawler pattern\n * @param  {string} userAgent\n * @return {string}\n */\nmodule.exports.find = function (userAgent) {\n  var match = userAgent.match(regex)\n  return match && match[0]\n}\n\n/**\n * Extent patterns for known crawlers\n * @param  {array} additionalFilters\n * @return {void}\n */\nmodule.exports.extend = function (additionalFilters) {\n  [].push.apply(list, additionalFilters.filter(included))\n  update()\n}\n\n/**\n * Check if item is included in list\n * @param  {string} rule\n * @return {boolean}\n */\nfunction included (rule) {\n  return list.indexOf(rule) === -1\n}\n\n/**\n * Exclude patterns from bot pattern rule\n * @param  {array} excludedFilters\n * @return {void}\n */\nmodule.exports.exclude = function (excludedFilters) {\n  var i = excludedFilters.length\n  while (i--) {\n    var index = list.lastIndexOf(excludedFilters[i].toLowerCase())\n    if (index > -1) {\n      list.splice(index, 1)\n    }\n  }\n  update()\n}\n\ntry {\n  // Risk: Uses lookbehind assertion\n  new RegExp('(?<! cu)bot').test('dangerbot')\n  // Addresses: Cubot device\n  list.splice(list.lastIndexOf('bot'), 1)\n  list.push('(?<! cu)bot')\n  // Addresses: Android webview\n  list.splice(list.lastIndexOf('google'), 1)\n  list.push('(?<! channel\\\\/)google(?!app\\\\/)')\n  // Addresses: Yandex browser\n  list.splice(list.lastIndexOf('search'), 1)\n  list.push('(?<! (ya|yandex))search')\n  // Addresses: libhttp browser\n  list.splice(list.lastIndexOf('http'), 1)\n  list.push('(?<!(lib))http')\n  // Addresses: java based browsers\n  list.splice(list.lastIndexOf('java'), 1)\n  list.push('java(?!;)')\n  // Addresses: java based browsers\n  list.splice(list.lastIndexOf('fetch'), 1)\n  list.push('(?<!(mozac))fetch')\n} catch (error) {\n  // ignore errors\n}\n\nupdate()\n","import isbot from '..';\n\n(function () {\n  const textarea = document.querySelector('textarea')\n  const output = document.querySelector('output')\n  let timer\n\n  const query = window.location.search.replace(/\\?ua=(.*)$/, '$1')\n\n  textarea.innerHTML = query\n    ? decodeURIComponent(query)\n    : navigator.userAgent\n  textarea.addEventListener('keyup', change)\n  textarea.addEventListener('paste', change)\n  textarea.addEventListener('focus', () => textarea.select())\n  check()\n\n  function change ({ target: { value } }) {\n    clearTimeout(timer)\n    timer = setTimeout(check, 200, value)\n  }\n\n  function check (value = textarea.innerHTML) {\n    value = value.trim()\n    if (value === '') {\n      output.innerHTML = 'Insert user agent string in the text box'\n      return\n    }\n\n    const result = isbot(value)\n\n    output.innerHTML = [\n      result\n        ? 'I think so, yes'\n        : 'I don\\'t think so, no',\n      result\n        ? `The pattern that I recognise is <kbd>${isbot.find(value)}</kbd>`\n        : 'I could not find a pattern I recognise'\n    ].join('\\n')\n\n    output.className = ''\n    setTimeout(() => { output.className = 'highlight' }, 100)\n  }\n})()\n"]}