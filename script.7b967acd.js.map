{"version":3,"sources":["../src/list.json","../src/amend/index.js","../src/index.js","script.js"],"names":["module","exports","amend","list","RegExp","test","splice","lastIndexOf","push","error","isbot","pattern","update","join","ua","find","match","indexOf","rule","toLowerCase","included","extend","filters","apply","filter","map","exclude","length","index","Object","defineProperties","get","textarea","timer","document","querySelector","output","query","window","location","search","replace","change","value","target","clearTimeout","setTimeout","check","innerHTML","trim","childNodes","forEach","child","parentNode","removeChild","result","appendChild","createTextNode","className","decodeURIComponent","navigator","userAgent","addEventListener","select"],"mappings":"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","file":"script.7b967acd.js","sourceRoot":"../page","sourcesContent":["module.exports=[\" daum[/|\\\\s]\",\" deusu/\",\"(?:^|\\\\s)site\",\"@[a-z]\",\"\\\\(at\\\\)[a-z]\",\"\\\\(github\\\\.com/\",\"\\\\[at\\\\][a-z]\",\"^12345\",\"^<\",\"^ace explorer\",\"^acoon\",\"^active\",\"^ad muncher\",\"^ahc/\",\"^amiga$\",\"^anglesharp/\",\"^anonymous\",\"^apache\",\"^apple-pubsub/\",\"^applicationhealthservice\",\"^arachni/\",\"^astute srm\",\"^avsdevicesdk/\",\"^axios/\",\"^bidtellect/\",\"^biglotron\",\"^bitdiscovery\",\"^blackboard safeassign\",\"^blocknote.net\",\"^blogtrottr/\",\"^braze sender\",\"^browsershots\",\"^cakephp\",\"^camo asset proxy\",\"^captivenetworksupport\",\"^castro\",\"^clamav[\\\\s/]\",\"^cobweb/\",\"^coccoc\",\"^coldfusion\",\"^collectd/\",\"^custom$\",\"^dap \",\"^datadog agent/\",\"^davclnt\",\"^ddg[_-]android\",\"^deluge\",\"^discourse\",\"^dispatch/\\\\d\",\"^disqus/\",\"^downcast/\",\"^duckduckgo\",\"^enigma browser\",\"^evernote clip resolver\",\"^facebook\",\"^faraday\",\"^fdm[/\\\\s]\\\\d\",\"^flashget\",\"^friendica\",\"^getright/\",\"^gigablastopensource\",\"^gobuster/\",\"^googal\",\"^goose\",\"^gozilla/\",\"^greenbrowser\",\"^hatena\",\"^hexometer\",\"^hobbit\",\"^hotzonu\",\"^hwcdn/\",\"^infox-wisg\",\"^ingrid/\\\\d\",\"^integrity/\",\"^invision\",\"^jeode/\",\"^jetbrains\",\"^jetty/\",\"^jigsaw\",\"^libwww\",\"^linkdex\",\"^lwp-\",\"^lwp::simple\",\"^mailchimp\\\\.com$\",\"^metauri\",\"^microsoft bits\",\"^microsoft data\",\"^microsoft office existence\",\"^microsoft office protocol discovery\",\"^microsoft windows network diagnostics\",\"^microsoft-cryptoapi\",\"^microsoft-webdav-miniredir\",\"^monit\",\"^movabletype\",\"^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$\",\"^my browser$\",\"^navermailapp\",\"^netsurf\",\"^nibbler\",\"^ning\",\"^node-superagent\",\"^notetextview\",\"^nuzzel\",\"^octopus\",\"^offline explorer\",\"^ossproxy\",\"^pagething\",\"^panscient\",\"^pearltrees\",\"^perimeterx\",\"^photon/\",\"^php\",\"^postman\",\"^postrank\",\"^prometheus/\",\"^python\",\"^ramblermail\",\"^read\",\"^reed\",\"^restsharp/\",\"^robozilla/\",\"^ruby$\",\"^scrapy\",\"^seo\",\"^shareaza\",\"^shockwave flash\",\"^shortlinktranslate\",\"^sistrix\",\"^sixy.ch/\",\"^smallproxy\",\"^snap$\",\"^snapchat\",\"^space bison\",\"^spotify/\",\"^sprinklr\",\"^svn\",\"^swcd \",\"^t-online browser\",\"^taringa\",\"^test certificate info\",\"^the knowledge ai\",\"^thinklab\",\"^thumb\",\"^traackr.com\",\"^transmission\",\"^tumblr/\",\"^ucmore\",\"^upflow/\",\"^user_agent\",\"^vbulletin\",\"^venus/fedoraplanet\",\"^viber$\",\"^w3c\",\"^webbandit/\",\"^webcollage/\",\"^webcopier\",\"^wget\",\"^whatsapp\",\"^whatweb\",\"^www-mechanize\",\"^xenu link sleuth\",\"^xymon\",\"^yahoo\",\"^yandex\",\"^zabbix\",\"^zdm/\\\\d\",\"^zeushdthree\",\"^zmeu$\",\"adbeat\\\\.com\",\"appinsights\",\"archive\",\"ask jeeves/teoma\",\"bit.ly/\",\"bluecoat drtr\",\"bot\",\"browsex\",\"burpcollaborator\",\"capture\",\"catch\",\"check\",\"chrome-lighthouse\",\"chromeframe\",\"client\",\"cloud\",\"crawl\",\"cron\",\"daemon\",\"dareboost\",\"datanyze\",\"dataprovider\",\"dejaclick\",\"dmbrowser\",\"download\",\"email\",\"evc-batch/\",\"feed\",\"fetch\",\"finder\",\"firephp\",\"freesafeip\",\"ghost\",\"gomezagent\",\"google\",\"headlesschrome/\",\"http\",\"httrack\",\"hubspot marketing grader\",\"hydra\",\"ibisbrowser\",\"images\",\"index\",\"ips-agent\",\"java\",\"jorgee\",\"library\",\"mail\\\\.ru/\",\"manager\",\"monitor\",\"neustar wpm\",\"news\",\"nutch\",\"offbyone\",\"optimize\",\"pagespeed\",\"parse\",\"perl\",\"phantom\",\"pingdom\",\"powermarks\",\"preview\",\"probe\",\"ptst[/ ]\\\\d\",\"reader\",\"rigor\",\"rss\",\"scan\",\"scrape\",\"search\",\"server\",\"sogou\",\"sparkler/\",\"spider\",\"statuscake\",\"stumbleupon\\\\.com\",\"supercleaner\",\"synapse\",\"synthetic\",\"toolbar\",\"torrent\",\"tracemyfile\",\"transcoder\",\"trendsmapresolver\",\"twingly recon\",\"url\",\"valid\",\"virtuoso\",\"wappalyzer\",\"webglance\",\"webkit2png\",\"websitemetadataretriever\",\"whatcms/\",\"wordpress\",\"zgrab\"];","/**\n * Mutate given list of patter strings\n * @param {string[]} list\n * @returns {string[]}\n */\nexport function amend (list) {\n  try {\n    // Risk: Uses lookbehind assertion, avoid breakage in parsing by using RegExp constructor\n    new RegExp('(?<! cu)bot').test('dangerbot') // eslint-disable-line prefer-regex-literals\n    // Addresses: Cubot device\n    list.splice(list.lastIndexOf('bot'), 1)\n    list.push('(?<! cu)bot')\n    // Addresses: Android webview\n    list.splice(list.lastIndexOf('google'), 1)\n    list.push('(?<! (channel\\\\/|google\\\\/))google(?!(app|\\\\/google))')\n\n    // Addresses: Yandex browser\n    list.splice(list.lastIndexOf('search'), 1)\n    list.push('(?<! (ya|yandex))search')\n    // Addresses: libhttp browser\n    list.splice(list.lastIndexOf('http'), 1)\n    list.push('(?<!(lib))http')\n    // Addresses: java based browsers\n    list.splice(list.lastIndexOf('java'), 1)\n    list.push('java(?!;)')\n    // Addresses: java based browsers\n    list.splice(list.lastIndexOf('fetch'), 1)\n    list.push('(?<!(mozac))fetch')\n  } catch (error) {\n    // ignore errors\n  }\n  return list\n}\n","import list from './list.json'\nimport { amend } from './amend/index.js'\n\namend(list)\nlet pattern\n\n/**\n * Refresh the local regex variable (clusure)\n */\nfunction update () {\n  pattern = new RegExp(list.join('|'), 'i')\n}\n\n/**\n * Check if string matches known crawler patterns\n * @param  {string} ua User Agent String\n * @return {boolean}\n */\nconst isbot = ua => pattern.test(ua)\n\n/**\n * Get the match for strings' known crawler pattern\n * @param  {string} ua\n * @return {string}\n */\nfunction find (ua) {\n  const match = ua.match(pattern)\n  return match && match[0]\n}\n\n/**\n * Find the first index of an existing rule or -1 if not found\n * @param  {string} rule\n * @returns {number}\n */\nconst indexOf = (rule) => list.indexOf(rule.toLowerCase())\n\n/**\n * Check if item is included in list\n * @param  {string} rule\n * @return {boolean}\n */\nconst included = (rule) => indexOf(rule) === -1\n\n/**\n * Extent patterns for known crawlers\n * @param  {string[]} filters\n * @return {void}\n */\nfunction extend (filters) {\n  [].push.apply(\n    list,\n    filters.filter(included).map(filter => filter.toLowerCase())\n  )\n  update()\n}\n\n/**\n * Exclude patterns from bot pattern rule\n * @param  {string[]} filters\n * @return {void}\n */\nfunction exclude (filters) {\n  let { length } = filters\n  while (length--) {\n    const index = indexOf(filters[length])\n    if (index > -1) {\n      list.splice(index, 1)\n    }\n  }\n  update()\n}\n\nObject.defineProperties(\n  isbot,\n  {\n    find: { get: () => find },\n    extend: { get: () => extend },\n    exclude: { get: () => exclude }\n  }\n)\n\nupdate()\n\nexport default isbot\n","import isbot from '../src/index.js'\nimport { amend } from '../src/amend/index.js'\nimport list from '../src/list.json'\n\n(function () {\n  const textarea = document.querySelector('textarea')\n  const output = document.querySelector('output')\n  let timer\n\n  const query = window.location.search.replace(/\\?ua=(.*)$/, '$1')\n\n  amend(list)\n  const pattern = new RegExp(list.join('|'), 'i')\n\n  textarea.childNodes.forEach(child => child.parentNode?.removeChild(child))\n  textarea.appendChild(document.createTextNode(\n    query\n      ? decodeURIComponent(query)\n      : navigator.userAgent\n  )\n  )\n  textarea.addEventListener('keyup', change)\n  textarea.addEventListener('paste', change)\n  textarea.addEventListener('focus', () => textarea.select())\n  check()\n\n  function change ({ target: { value } }) {\n    clearTimeout(timer)\n    timer = setTimeout(check, 200, value)\n  }\n\n  function check (value = textarea.innerHTML) {\n    value = value.trim()\n    output.childNodes.forEach(child => child.parentNode?.removeChild(child))\n    if (value === '') {\n      output.appendChild(\n        document.createTextNode(\n          'Insert user agent string in the text box'\n        )\n      )\n      return\n    }\n\n    const result = isbot(value)\n    output.appendChild(\n      document.createTextNode(\n        result\n          ? `I think so, yes\\nThe pattern that I recognise is ‟${find(value)}”`\n          : 'I don\\'t think so, no\\nI could not find a pattern I recognise'\n      )\n    )\n\n    output.className = ''\n    setTimeout(() => { output.className = 'highlight' }, 100)\n  }\n\n  function find (ua) {\n    const match = ua.match(pattern)\n    return match && match[0]\n  }\n})()\n"]}