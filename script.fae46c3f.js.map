{"version":3,"sources":["../src/list.json","../src/amend/index.js","../src/isbot/index.js","../src/index.js","script.js"],"names":["module","exports","amend","list","RegExp","test","error","splice","lastIndexOf","push","flags","Isbot","patterns","slice","Object","defineProperties","ua","getOwnPropertyNames","prototype","filter","prop","includes","reduce","accumulator","assign","get","bind","Boolean","match","entry","exclude","matches","filters","apply","rule","map","toLowerCase","length","index","join","indexOf","isbot","textarea","timer","document","querySelector","output","query","window","location","search","replace","pattern","change","value","target","clearTimeout","setTimeout","check","innerHTML","trim","childNodes","forEach","child","parentNode","removeChild","result","appendChild","createTextNode","find","className","decodeURIComponent","navigator","userAgent","addEventListener","select"],"mappings":"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","file":"script.fae46c3f.js","sourceRoot":"../page","sourcesContent":["module.exports=[\" daum[\\\\s/]\",\" deusu/\",\"(?:^|\\\\s)site\",\"@[a-z]\",\"\\\\(at\\\\)[a-z]\",\"\\\\(github\\\\.com/\",\"\\\\[at\\\\][a-z]\",\"^12345\",\"^<\",\"^[\\\\w\\\\s\\\\.]+/v?\\\\d+(\\\\.\\\\d+)?(\\\\.\\\\d{1,10})?$\",\"^[\\\\w]+$\",\"^ace explorer\",\"^acoon\",\"^active\",\"^ad muncher\",\"^anglesharp/\",\"^anonymous\",\"^apple-pubsub/\",\"^astute srm\",\"^avsdevicesdk/\",\"^axios/\",\"^bidtellect/\",\"^biglotron\",\"^blackboard safeassign\",\"^blocknote.net\",\"^braze sender\",\"^captivenetworksupport\",\"^castro\",\"^cf-uc \",\"^clamav[\\\\s/]\",\"^cobweb/\",\"^coccoc\",\"^dap \",\"^ddg[_-]android\",\"^discourse\",\"^dispatch/\\\\d\",\"^downcast/\",\"^duckduckgo\",\"^email\",\"^enigma browser\",\"^evernote clip resolver\",\"^facebook\",\"^faraday\",\"^fdm[\\\\s/]\\\\d\",\"^getright/\",\"^gozilla/\",\"^hatena\",\"^hobbit\",\"^hotzonu\",\"^hwcdn/\",\"^infox-wisg\",\"^invision\",\"^jeode/\",\"^jetbrains\",\"^jetty/\",\"^jigsaw\",\"^linkdex\",\"^lwp[-:\\\\s]\",\"^mailchimp\\\\.com$\",\"^metauri\",\"^microsoft bits\",\"^microsoft data\",\"^microsoft office existence\",\"^microsoft office protocol discovery\",\"^microsoft windows network diagnostics\",\"^microsoft-cryptoapi\",\"^microsoft-webdav-miniredir\",\"^movabletype\",\"^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$\",\"^my browser$\",\"^navermailapp\",\"^netsurf\",\"^node-superagent\",\"^octopus\",\"^offline explorer\",\"^pagething\",\"^panscient\",\"^perimeterx\",\"^php\",\"^postman\",\"^postrank\",\"^python\",\"^read\",\"^reed\",\"^request-promise$\",\"^restsharp/\",\"^shareaza\",\"^shockwave flash\",\"^snapchat\",\"^space bison\",\"^sprinklr\",\"^svn\",\"^swcd \",\"^t-online browser\",\"^taringa\",\"^test certificate info\",\"^the knowledge ai\",\"^thinklab\",\"^thumbor/\",\"^traackr.com\",\"^tumblr/\",\"^vbulletin\",\"^venus/fedoraplanet\",\"^w3c\",\"^webbandit/\",\"^webcopier\",\"^wget\",\"^whatsapp\",\"^www-mechanize\",\"^xenu link sleuth\",\"^yahoo\",\"^yandex\",\"^zdm/\\\\d\",\"^zeushdthree\",\"adbeat\\\\.com\",\"appinsights\",\"archive\",\"ask jeeves/teoma\",\"bit\\\\.ly/\",\"bluecoat drtr\",\"bot\",\"browsex\",\"burpcollaborator\",\"capture\",\"catch\",\"check\",\"chrome-lighthouse\",\"chromeframe\",\"client\",\"cloud\",\"crawl\",\"daemon\",\"dareboost\",\"datanyze\",\"dataprovider\",\"dejaclick\",\"dmbrowser\",\"download\",\"evc-batch/\",\"feed\",\"fetch\",\"firephp\",\"freesafeip\",\"ghost\",\"gomezagent\",\"google\",\"headlesschrome/\",\"http\",\"httrack\",\"hubspot marketing grader\",\"hydra\",\"ibisbrowser\",\"images\",\"index\",\"ips-agent\",\"java\",\"jorgee\",\"library\",\"mail\\\\.ru/\",\"manager\",\"monitor\",\"morningscore/\",\"neustar wpm\",\"news\",\"nutch\",\"offbyone\",\"optimize\",\"pagespeed\",\"parse\",\"perl\",\"phantom\",\"pingdom\",\"powermarks\",\"preview\",\"probe\",\"proxy\",\"ptst[\\\\s/]\\\\d\",\"reader\",\"rexx;\",\"rigor\",\"rss\",\"scan\",\"scrape\",\"search\",\"server\",\"sogou\",\"sparkler/\",\"spider\",\"statuscake\",\"stumbleupon\\\\.com\",\"supercleaner\",\"synapse\",\"synthetic\",\"taginspector/\",\"toolbar\",\"torrent\",\"tracemyfile\",\"transcoder\",\"trendsmapresolver\",\"twingly recon\",\"url\",\"valid\",\"virtuoso\",\"wappalyzer\",\"webglance\",\"webkit2png\",\"websitemetadataretriever\",\"whatcms/\",\"wordpress\",\"zgrab\"];","/**\n * Mutate given list of patter strings\n * @param {string[]} list\n * @returns {string[]}\n */\nexport function amend (list) {\n  try {\n    // Risk: Uses lookbehind assertion, avoid breakage in parsing by using RegExp constructor\n    new RegExp('(?<! cu)bot').test('dangerbot') // eslint-disable-line prefer-regex-literals\n  } catch (error) {\n    // Skip regex fixes\n    return list\n  }\n\n  // Addresses: Cubot device\n  list.splice(list.lastIndexOf('bot'), 1)\n  list.push('(?<! cu)bot')\n\n  // Addresses: Android webview\n  list.splice(list.lastIndexOf('google'), 1)\n  list.push('(?<! (channel\\\\/|google\\\\/))google(?!(app|\\\\/google))')\n\n  // Addresses: Yandex browser\n  list.splice(list.lastIndexOf('search'), 1)\n  list.push('(?<! (ya|yandex))search')\n\n  // Addresses: libhttp browser\n  list.splice(list.lastIndexOf('http'), 1)\n  list.push('(?<!(lib))http')\n\n  // Addresses: java based browsers\n  list.splice(list.lastIndexOf('java'), 1)\n  list.push('java(?!;)')\n\n  // Addresses: Mozilla nightly build https://github.com/mozilla-mobile/android-components/search?q=MozacFetch\n  list.splice(list.lastIndexOf('fetch'), 1)\n  list.push('(?<!(mozac))fetch')\n\n  return list\n}\n","import list from '../list.json'\nimport { amend } from '../amend/index.js'\n\namend(list)\n\nconst flags = 'i'\n\n/**\n * Test user agents for matching patterns\n */\nexport class Isbot {\n  /**\n   * @type {string[]}\n   */\n  #list;\n\n  /**\n   * @type {RegExp}\n   */\n  #pattern;\n\n  constructor (patterns) {\n    this.#list = patterns || list.slice()\n    this.#update()\n\n    const isbot = ua => this.test(ua)\n\n    return Object.defineProperties(\n      isbot,\n      Object.getOwnPropertyNames(Isbot.prototype).filter(\n        prop => !['constructor'].includes(prop)\n      ).reduce(\n        (accumulator, prop) => Object.assign(\n          accumulator,\n          { [prop]: { get: () => this[prop].bind(this) } }\n        ),\n        {}\n      )\n    )\n  }\n\n  /**\n   * Recreate the pattern from rules list\n   */\n  #update () {\n    this.#pattern = new RegExp(\n      this.#list.join('|'),\n      flags\n    )\n  }\n\n  /**\n   * Find the first index of an existing rule or -1 if not found\n   * @param  {string} rule\n   * @returns {number}\n   */\n  #index (rule) {\n    return this.#list.indexOf(rule.toLowerCase())\n  }\n\n  /**\n   * Match given string against out pattern\n   * @param  {string} ua User Agent string\n   * @returns {boolean}\n   */\n  test (ua) {\n    return Boolean(ua) && this.#pattern.test(ua)\n  }\n\n  /**\n   * Get the match for strings' known crawler pattern\n   * @param  {string} ua User Agent string\n   * @returns {string|null}\n   */\n  find (ua = '') {\n    const match = ua.match(this.#pattern)\n    return match && match[0]\n  }\n\n  /**\n   * Get the patterns that match user agent string if any\n   * @param  {string} ua User Agent string\n   * @returns {string[]}\n   */\n  matches (ua = '') {\n    return this.#list.filter(\n      entry => new RegExp(entry, flags).test(ua)\n    )\n  }\n\n  /**\n   * Clear all patterns that match user agent\n   * @param  {string} ua User Agent string\n   * @returns {void}\n   */\n  clear (ua = '') {\n    this.exclude(this.matches(ua))\n  }\n\n  /**\n   * Extent patterns for known crawlers\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  extend (filters = []) {\n    [].push.apply(\n      this.#list,\n      filters.filter(\n        rule => this.#index(rule) === -1\n      ).map(\n        filter => filter.toLowerCase()\n      )\n    )\n    this.#update()\n  }\n\n  /**\n   * Exclude patterns from bot pattern rule\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  exclude (filters = []) {\n    let { length } = filters\n    while (length--) {\n      const index = this.#index(filters[length])\n      if (index > -1) {\n        this.#list.splice(index, 1)\n      }\n    }\n    this.#update()\n  }\n\n  /**\n   * Create a new Isbot instance using given list or self's list\n   * @param  {string[]} [list]\n   * @returns {Isbot}\n   */\n  spawn (list) {\n    return new Isbot(list || this.#list)\n  }\n}\n","import { Isbot } from './isbot/index.js'\n\nconst isbot = new Isbot()\n\nexport default isbot\n","import isbot from '../src/index.js'\nimport { amend } from '../src/amend/index.js'\nimport list from '../src/list.json'\n\n(function () {\n  const textarea = document.querySelector('textarea')\n  const output = document.querySelector('output')\n  let timer\n\n  const query = window.location.search.replace(/\\?ua=(.*)$/, '$1')\n\n  amend(list)\n  const pattern = new RegExp(list.join('|'), 'i')\n\n  textarea.childNodes.forEach(child => child.parentNode?.removeChild(child))\n  textarea.appendChild(document.createTextNode(\n    query\n      ? decodeURIComponent(query)\n      : navigator.userAgent\n  )\n  )\n  textarea.addEventListener('keyup', change)\n  textarea.addEventListener('paste', change)\n  textarea.addEventListener('focus', () => textarea.select())\n  check()\n\n  function change ({ target: { value } }) {\n    clearTimeout(timer)\n    timer = setTimeout(check, 200, value)\n  }\n\n  function check (value = textarea.innerHTML) {\n    value = value.trim()\n    output.childNodes.forEach(child => child.parentNode?.removeChild(child))\n    if (value === '') {\n      output.appendChild(\n        document.createTextNode(\n          'Insert user agent string in the text box'\n        )\n      )\n      return\n    }\n\n    const result = isbot(value)\n    output.appendChild(\n      document.createTextNode(\n        result\n          ? `I think so, yes\\nThe pattern that was matched is ‟${find(value)}”`\n          : 'I don\\'t think so, no\\nI could not find a pattern I recognise'\n      )\n    )\n\n    output.className = ''\n    setTimeout(() => { output.className = 'highlight' }, 100)\n  }\n\n  function find (ua) {\n    const match = ua.match(pattern)\n    return match && match[0]\n  }\n})()\n"]}