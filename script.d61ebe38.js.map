{"version":3,"sources":["../src/list.json","../src/amend/index.js","../src/isbot/index.js","../src/index.js","script.js"],"names":["module","exports","amend","list","RegExp","test","error","splice","lastIndexOf","push","Isbot","patterns","slice","ua","match","filters","apply","filter","rule","map","toLowerCase","length","index","join","indexOf","isbot","createInterface","instance","Object","defineProperties","find","get","extend","exclude","spawn","textarea","timer","document","querySelector","output","query","window","location","search","replace","pattern","change","value","target","clearTimeout","setTimeout","check","innerHTML","trim","childNodes","forEach","child","parentNode","removeChild","result","appendChild","createTextNode","className","decodeURIComponent","navigator","userAgent","addEventListener","select"],"mappings":"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","file":"script.d61ebe38.js","sourceRoot":"../page","sourcesContent":["module.exports=[\" daum[/|\\\\s]\",\" deusu/\",\"(?:^|\\\\s)site\",\"@[a-z]\",\"\\\\(at\\\\)[a-z]\",\"\\\\(github\\\\.com/\",\"\\\\[at\\\\][a-z]\",\"^12345\",\"^<\",\"^ace explorer\",\"^acoon\",\"^active\",\"^ad muncher\",\"^ahc/\",\"^amiga$\",\"^anglesharp/\",\"^anonymous\",\"^apache\",\"^apple-pubsub/\",\"^applicationhealthservice\",\"^arachni/\",\"^astute srm\",\"^avsdevicesdk/\",\"^axios/\",\"^bidtellect/\",\"^biglotron\",\"^bitdiscovery\",\"^blackboard safeassign\",\"^blocknote.net\",\"^blogtrottr/\",\"^braze sender\",\"^browsershots\",\"^cakephp\",\"^camo asset proxy\",\"^captivenetworksupport\",\"^castro\",\"^clamav[\\\\s/]\",\"^cobweb/\",\"^coccoc\",\"^coldfusion\",\"^collectd/\",\"^custom$\",\"^dap \",\"^datadog agent/\",\"^davclnt\",\"^ddg[_-]android\",\"^deluge\",\"^discourse\",\"^dispatch/\\\\d\",\"^disqus/\",\"^downcast/\",\"^duckduckgo\",\"^enigma browser\",\"^evernote clip resolver\",\"^facebook\",\"^faraday\",\"^fdm[/\\\\s]\\\\d\",\"^flashget\",\"^friendica\",\"^getright/\",\"^gigablastopensource\",\"^gobuster/\",\"^googal\",\"^goose\",\"^gozilla/\",\"^greenbrowser\",\"^hatena\",\"^hexometer\",\"^hobbit\",\"^hotzonu\",\"^hwcdn/\",\"^infox-wisg\",\"^ingrid/\\\\d\",\"^integrity/\",\"^invision\",\"^jeode/\",\"^jetbrains\",\"^jetty/\",\"^jigsaw\",\"^libwww\",\"^linkdex\",\"^lwp-\",\"^lwp::simple\",\"^mailchimp\\\\.com$\",\"^metauri\",\"^microsoft bits\",\"^microsoft data\",\"^microsoft office existence\",\"^microsoft office protocol discovery\",\"^microsoft windows network diagnostics\",\"^microsoft-cryptoapi\",\"^microsoft-webdav-miniredir\",\"^monit\",\"^movabletype\",\"^mozilla/\\\\d\\\\.\\\\d \\\\(compatible;?\\\\)$\",\"^my browser$\",\"^navermailapp\",\"^netsurf\",\"^nibbler\",\"^ning\",\"^node-superagent\",\"^notetextview\",\"^nuzzel\",\"^octopus\",\"^offline explorer\",\"^ossproxy\",\"^pagething\",\"^panscient\",\"^pearltrees\",\"^perimeterx\",\"^photon/\",\"^php\",\"^postman\",\"^postrank\",\"^prometheus/\",\"^python\",\"^ramblermail\",\"^read\",\"^reed\",\"^restsharp/\",\"^robozilla/\",\"^ruby$\",\"^scrapy\",\"^seo\",\"^shareaza\",\"^shockwave flash\",\"^shortlinktranslate\",\"^sistrix\",\"^sixy.ch/\",\"^smallproxy\",\"^snap$\",\"^snapchat\",\"^space bison\",\"^spotify/\",\"^sprinklr\",\"^svn\",\"^swcd \",\"^t-online browser\",\"^taringa\",\"^test certificate info\",\"^the knowledge ai\",\"^thinklab\",\"^thumb\",\"^traackr.com\",\"^transmission\",\"^tumblr/\",\"^ucmore\",\"^upflow/\",\"^user_agent\",\"^vbulletin\",\"^venus/fedoraplanet\",\"^viber$\",\"^w3c\",\"^webbandit/\",\"^webcollage/\",\"^webcopier\",\"^wget\",\"^whatsapp\",\"^whatweb\",\"^www-mechanize\",\"^xenu link sleuth\",\"^xymon\",\"^yahoo\",\"^yandex\",\"^zabbix\",\"^zdm/\\\\d\",\"^zeushdthree\",\"^zmeu$\",\"adbeat\\\\.com\",\"appinsights\",\"archive\",\"ask jeeves/teoma\",\"bit.ly/\",\"bluecoat drtr\",\"bot\",\"browsex\",\"burpcollaborator\",\"capture\",\"catch\",\"check\",\"chrome-lighthouse\",\"chromeframe\",\"client\",\"cloud\",\"crawl\",\"cron\",\"daemon\",\"dareboost\",\"datanyze\",\"dataprovider\",\"dejaclick\",\"dmbrowser\",\"download\",\"email\",\"evc-batch/\",\"feed\",\"fetch\",\"finder\",\"firephp\",\"freesafeip\",\"ghost\",\"gomezagent\",\"google\",\"headlesschrome/\",\"http\",\"httrack\",\"hubspot marketing grader\",\"hydra\",\"ibisbrowser\",\"images\",\"index\",\"ips-agent\",\"java\",\"jorgee\",\"library\",\"mail\\\\.ru/\",\"manager\",\"monitor\",\"neustar wpm\",\"news\",\"nutch\",\"offbyone\",\"optimize\",\"pagespeed\",\"parse\",\"perl\",\"phantom\",\"pingdom\",\"powermarks\",\"preview\",\"probe\",\"ptst[/ ]\\\\d\",\"reader\",\"rigor\",\"rss\",\"scan\",\"scrape\",\"search\",\"server\",\"sogou\",\"sparkler/\",\"spider\",\"statuscake\",\"stumbleupon\\\\.com\",\"supercleaner\",\"synapse\",\"synthetic\",\"toolbar\",\"torrent\",\"tracemyfile\",\"transcoder\",\"trendsmapresolver\",\"twingly recon\",\"url\",\"valid\",\"virtuoso\",\"wappalyzer\",\"webglance\",\"webkit2png\",\"websitemetadataretriever\",\"whatcms/\",\"wordpress\",\"zgrab\"];","/**\n * Mutate given list of patter strings\n * @param {string[]} list\n * @returns {string[]}\n */\nexport function amend (list) {\n  try {\n    // Risk: Uses lookbehind assertion, avoid breakage in parsing by using RegExp constructor\n    new RegExp('(?<! cu)bot').test('dangerbot') // eslint-disable-line prefer-regex-literals\n  } catch (error) {\n    // Skip regex fixes\n    return list\n  }\n\n  // Addresses: Cubot device\n  list.splice(list.lastIndexOf('bot'), 1)\n  list.push('(?<! cu)bot')\n  // Addresses: Android webview\n  list.splice(list.lastIndexOf('google'), 1)\n  list.push('(?<! (channel\\\\/|google\\\\/))google(?!(app|\\\\/google))')\n\n  // Addresses: Yandex browser\n  list.splice(list.lastIndexOf('search'), 1)\n  list.push('(?<! (ya|yandex))search')\n  // Addresses: libhttp browser\n  list.splice(list.lastIndexOf('http'), 1)\n  list.push('(?<!(lib))http')\n  // Addresses: java based browsers\n  list.splice(list.lastIndexOf('java'), 1)\n  list.push('java(?!;)')\n  // Addresses: java based browsers\n  list.splice(list.lastIndexOf('fetch'), 1)\n  list.push('(?<!(mozac))fetch')\n\n  return list\n}\n","import list from '../list.json'\nimport { amend } from '../amend/index.js'\n\namend(list)\n\n/**\n * Test user agents for matching patterns\n */\nexport class Isbot {\n  /**\n   * @type {string[]}\n   */\n  #list;\n\n  /**\n   * @type {RegExp}\n   */\n  #pattern;\n\n  constructor (patterns) {\n    this.#list = patterns || list.slice()\n    this.#update()\n  }\n\n  /**\n   * Recreate the pattern from rules list\n   */\n  #update () {\n    this.#pattern = new RegExp(\n      this.#list.join('|'),\n      'i'\n    )\n  }\n\n  /**\n   * Find the first index of an existing rule or -1 if not found\n   * @param  {string} rule\n   * @returns {number}\n   */\n  #index (rule) {\n    return this.#list.indexOf(rule.toLowerCase())\n  }\n\n  /**\n   * Match given string against out pattern\n   * @param  {string} ua User Agent string\n   * @returns {boolean}\n   */\n  test (ua) {\n    return this.#pattern.test(ua)\n  }\n\n  /**\n   * Get the match for strings' known crawler pattern\n   * @param  {string} ua User Agent string\n   * @returns {string}\n   */\n  find (ua = '') {\n    const match = ua.match(this.#pattern)\n    return match && match[0]\n  }\n\n  /**\n   * Extent patterns for known crawlers\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  extend (filters = []) {\n    [].push.apply(\n      this.#list,\n      filters.filter(\n        rule => this.#index(rule) === -1\n      ).map(\n        filter => filter.toLowerCase()\n      )\n    )\n    this.#update()\n  }\n\n  /**\n   * Exclude patterns from bot pattern rule\n   * @param  {string[]} filters\n   * @returns {void}\n   */\n  exclude (filters = []) {\n    let { length } = filters\n    while (length--) {\n      const index = this.#index(filters[length])\n      if (index > -1) {\n        this.#list.splice(index, 1)\n      }\n    }\n    this.#update()\n  }\n\n  /**\n   * Create a new Isbot instance using given list or self's list\n   * @param  {string[]} [list]\n   * @returns {Isbot}\n   */\n  spawn (list) {\n    return new Isbot(list || this.#list)\n  }\n}\n","import { Isbot } from './isbot/index.js'\n\nconst createInterface = instance => Object.defineProperties(\n  function isbot (ua) {\n    return instance.test(ua)\n  },\n  {\n    find: { get: () => ua => instance.find(ua) },\n    extend: { get: () => list => instance.extend(list) },\n    exclude: { get: () => list => instance.exclude(list) },\n    spawn: { get: () => list => createInterface(instance.spawn(list)) }\n  }\n)\n\nconst isbot = createInterface(new Isbot())\n\nexport default isbot\n","import isbot from '../src/index.js'\nimport { amend } from '../src/amend/index.js'\nimport list from '../src/list.json'\n\n(function () {\n  const textarea = document.querySelector('textarea')\n  const output = document.querySelector('output')\n  let timer\n\n  const query = window.location.search.replace(/\\?ua=(.*)$/, '$1')\n\n  amend(list)\n  const pattern = new RegExp(list.join('|'), 'i')\n\n  textarea.childNodes.forEach(child => child.parentNode?.removeChild(child))\n  textarea.appendChild(document.createTextNode(\n    query\n      ? decodeURIComponent(query)\n      : navigator.userAgent\n  )\n  )\n  textarea.addEventListener('keyup', change)\n  textarea.addEventListener('paste', change)\n  textarea.addEventListener('focus', () => textarea.select())\n  check()\n\n  function change ({ target: { value } }) {\n    clearTimeout(timer)\n    timer = setTimeout(check, 200, value)\n  }\n\n  function check (value = textarea.innerHTML) {\n    value = value.trim()\n    output.childNodes.forEach(child => child.parentNode?.removeChild(child))\n    if (value === '') {\n      output.appendChild(\n        document.createTextNode(\n          'Insert user agent string in the text box'\n        )\n      )\n      return\n    }\n\n    const result = isbot(value)\n    output.appendChild(\n      document.createTextNode(\n        result\n          ? `I think so, yes\\nThe pattern that I recognise is ‟${find(value)}”`\n          : 'I don\\'t think so, no\\nI could not find a pattern I recognise'\n      )\n    )\n\n    output.className = ''\n    setTimeout(() => { output.className = 'highlight' }, 100)\n  }\n\n  function find (ua) {\n    const match = ua.match(pattern)\n    return match && match[0]\n  }\n})()\n"]}